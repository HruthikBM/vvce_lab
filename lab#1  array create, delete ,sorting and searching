#include<stdio.h>
#include<stdlib.h>
int arr[15];
int n;
int pos,elem,i,j,ch;

void create_arr(){
	printf("enter size ");
	scanf("%d",&n);
	printf("enter elements ");
	  for(i=0;i<n;i++)  scanf("%d",&arr[i]);
}

void display(){
	printf("array elements are: ");
    for(i=0;i<n;i++) printf("arr[%d]= %d ",i,arr[i]);
    	printf("\n");
}

void insert(){
	printf("\n enter the position ");
	scanf("%d",&pos);
	printf("\n enter the element ");
	scanf("%d",&elem);

	if(pos<0||pos>=n-1)  printf(" eror\n");	
	else{
		for(i=n-1;i>=pos;i--) arr[i+1]=arr[i];
			arr[pos]=elem;
		    n+=1;
	}
}

void delete_el(){
	printf("\n enter position");
	scanf("%d",&pos);

	if(pos>n||pos<0)  printf(" eror\n");
	else{
		for(i=pos+1;i<n;i++) arr[i-1]=arr[i];
         n-=1;
	}
}
void sorting(){
	int x;
	for(i=0;i<n-1;i++)
		for(j=0;j<n-i-1;j++){
			if(arr[j]>arr[j+1]){
				x=arr[j];
			   arr[j]=arr[j+1];
			   arr[j+1]=x;
			}
		}
     display();
}

int searching(int l,int r,int x){
	if(r>=l){
		int mid=l+(r-l)/2;
		if(arr[mid]==x)   return mid;
		if(arr[mid]>x)     return searching(l,mid-1,x);	
       
           	 return searching(mid+1,r,x);

		
	}
	return -1;
}
int main(){
	do{
	   printf("\n 1.create 2.display 3.insert 4.delete_el 5.sizeof_array 6.sorting 7.searching 8.exit");
	   printf("\nenter your choice : ");

	   scanf("%d",&ch);

	   switch(ch)
	   {
	   	  case 1:create_arr();
	   	        break;
	   	  case 2:display();
	   	        break;
	   	  case 3:insert();
	   	  		break;  
	   	  case 4:delete_el();
	   	  		break;	
	   	  case 5:printf("%d",n);
	   	        break;		
	   	  case 6:sorting();
	   	        break;	
	   chance:	        	
	   	  case 7:
	   	       printf("enter the  element");
	   	       int val;
	   	       scanf("%d",&val);
	   	       int x=searching(0,n-1,val);
	   	         if(x>= 0)
	   	         	printf(" %d in position=%d\n",val,x);
	   	         else{
	   	         	
  					printf(" there is no element  ");
  					printf("take one more chance !!!\n");
  					goto chance;
	   	         }
	   	  		break;	  

	   }

     }while(ch!=8);

	return 0;
}
